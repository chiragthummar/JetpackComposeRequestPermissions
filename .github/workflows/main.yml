name: Release Signed APK

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Compose Permission'
        required: true
        default: '1.0'
jobs:
  build:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: D
        run: chmod +x gradlew
      - name: App 'release' with Gradle
        run: ./gradlew assembleRelease
      - name: Sign APK
        id: sign_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.PASS }}
          keyPassword: ${{ secrets.PASS }}
      - run: echo "Build status report=${{ job.status }}."
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: ${{steps.sign_apk.outputs.signedReleaseFile}}
      - name: Generate App Version Name
        run: echo "VERSION_NAME=${{steps.sign_apk.outputs.signedReleaseFile}}" >> $GITHUB_ENV
      - name: App_V1
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0
          release_name: v1.0.0
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{steps.sign_apk.outputs.signedReleaseFile}}
          asset_name: ${{ github.event.repository.name }}_V1.0.0.apk
          asset_content_type: application/zip
      - run: echo "Upload returned with status=${{ job.status }}."
